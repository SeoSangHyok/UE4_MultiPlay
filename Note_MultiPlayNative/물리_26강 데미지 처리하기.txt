1. 액터를 구성하다보면 스테틱 메시와 스피어 컴포넌트들이 각각 충돌 세팅이 되어있는경우가 있다.

2. 가급적이면 충돌은 sphere/cube/cylinder 컴포넌트로 처리하는것이 비용이 싸게 먹히니 해당 컴포넌트 이외에 것을은 가급적 충돌처리에 사용하는것을 지양하도록 하자

3. 특히나 스태틱 메시에 있는 복합 콜리전의 경우 연산비용이 아주 크므로 로컬 클라이언트에서 먼가 효과를 보여주는 용도 이외에는 사용하지 않는것이 좋음

4. 각 컴포넌트들도 Setcollision 계열 함수로 각각의 충돌처리가 가능하니 참고하도록 하자

5. 참고로 SetCollisionEnabled 함수는 해당 컴포넌트의 충돌 자체를 끄는것으로 불필요한 컴포넌트(예를들어 복합콜리전을 사용하고 있는 스테틱메시컴포넌트같은)는 아에 충돌을 끄도록 하자

6. 만약 컴포넌트의 오버랩 이벤트가 발생하지 않는경우...
  - 해당 컴포넌트의 Generate Overlap Event가 세팅되어있는지 확인
  - collision preset확인
    -- 컴포넌트의 collision enable 타입이 Query 가 포함되어있는지 확인. physics만 켜져있으면 오지 않는다.
  - 해당 컴포넌트의 겹침(overlap)항목 확인

7. 컴포넌트의 OnComponentBeginOverlap 이벤트처리시 해당 컴포넌트가 포함된 엑터의 오너 처리를 해야할 경우도 있다. 컴포넌트의 사이즈가 큰경우 스폰하자마자 오버랩 이벤트가 발생할수 있기 때문이다.

8. 물리연산을 활용하는 컴포넌트가 있는경우 Use CCD옵션을 켜서 지속적으로 오버랩이벤트를 체크해서 동기화를 맞추는것도 가능.

9 하지만 저건 진정한 의미의 동기화가 아닌 눈속임처리일뿐더러 동기화도 맞지 않는다.
